name: Nightly Validation

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: write
  issues: write

jobs:
  quick-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Prepare Python environment
        id: setup-poetry
        uses: ./.github/actions/setup-poetry
        with:
          python-version: "3.12"

      - name: Run core validation harness
        run: |
          poetry run python scripts/validation/verify_core.py --check all

      - name: Run Coinbase websocket regression test
        run: |
          poetry run pytest tests/unit/bot_v2/features/brokerages/coinbase/test_coinbase_websocket.py -k sequence_guard -v

      - name: Quick WebSocket smoke
        run: |
          export PYTHONPATH="${GITHUB_WORKSPACE}${PYTHONPATH:+:$PYTHONPATH}"
          poetry run python - <<'PY'
          import os
          import sys
          import types

          workspace = os.getcwd()
          src_path = os.path.join(workspace, "src")
          if src_path not in sys.path:
            sys.path.insert(0, src_path)
          if workspace not in sys.path:
            sys.path.insert(0, workspace)

          from src.bot_v2.features.brokerages.coinbase.ws import CoinbaseWebSocket, SequenceGuard

          mock_ws = types.ModuleType('websocket')
          mock_ws.create_connection = lambda url: None
          sys.modules['websocket'] = mock_ws

          ws = CoinbaseWebSocket('wss://test')
          ws.connect()
          assert ws._transport is not None

          guard = SequenceGuard()
          first = guard.annotate({'sequence': 1})
          assert 'gap_detected' not in first
          second = guard.annotate({'sequence': 3})
          assert second.get('gap_detected') is True
          PY

      - name: Report status
        if: failure()
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Nightly validation failed - Coinbase routing regression',
              body: 'The nightly validation detected a regression in Coinbase endpoint routing. Check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.',
              labels: ['bug', 'coinbase', 'critical']
            })
