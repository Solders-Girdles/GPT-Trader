apiVersion: v1
kind: Service
metadata:
  name: ml-inference
  namespace: gpt-trader
spec:
  selector:
    app: ml-inference
  ports:
    - port: 8501
      targetPort: 8501
      name: grpc
    - port: 8500
      targetPort: 8500
      name: rest
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-inference
  namespace: gpt-trader
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ml-inference
  template:
    metadata:
      labels:
        app: ml-inference
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      nodeSelector:
        node.kubernetes.io/instance-type: g4dn.xlarge  # GPU instance for AWS
      containers:
        - name: ml-inference
          image: gpt-trader/ml-inference:latest
          imagePullPolicy: Always
          env:
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@redis:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: REDIS_PASSWORD
            - name: MODEL_TYPE
              value: "transformer"
            - name: DEVICE
              value: "cuda"
            - name: BATCH_SIZE
              value: "32"
            - name: MAX_SEQUENCE_LENGTH
              value: "100"
            - name: LOG_LEVEL
              value: "INFO"
          resources:
            requests:
              memory: "4Gi"
              cpu: "2000m"
              nvidia.com/gpu: 1
            limits:
              memory: "16Gi"
              cpu: "8000m"
              nvidia.com/gpu: 1
          volumeMounts:
            - name: models
              mountPath: /app/models
            - name: config
              mountPath: /app/config
          ports:
            - containerPort: 8501
              name: grpc
            - containerPort: 8500
              name: rest
          livenessProbe:
            httpGet:
              path: /health
              port: 8500
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8500
            initialDelaySeconds: 30
            periodSeconds: 5
      volumes:
        - name: models
          persistentVolumeClaim:
            claimName: ml-models-pvc
        - name: config
          configMap:
            name: gpt-trader-config

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ml-inference-hpa
  namespace: gpt-trader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ml-inference
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Pods
          value: 2
          periodSeconds: 120
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 300
