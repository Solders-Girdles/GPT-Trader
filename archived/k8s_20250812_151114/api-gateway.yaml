apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: gpt-trader
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  selector:
    app: api-gateway
  ports:
    - name: http
      port: 80
      targetPort: 8000
    - name: websocket
      port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: gpt-trader
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - name: api-gateway
          image: gpt-trader/api-gateway:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 8080
              name: websocket
          env:
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@redis:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: REDIS_PASSWORD
            - name: DATABASE_URL
              value: "postgresql://gpt_trader:$(POSTGRES_PASSWORD)@postgresql:5432/gpt_trader"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: POSTGRES_PASSWORD
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: JWT_SECRET_KEY
            - name: CORS_ORIGINS
              value: "https://app.gpt-trader.com,https://admin.gpt-trader.com"
            - name: RATE_LIMIT
              value: "100"
            - name: RATE_LIMIT_WINDOW
              value: "60"
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /api/v1/system/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/system/health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: gpt-trader-config

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: gpt-trader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
