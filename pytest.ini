[pytest]
# Python path configuration
pythonpath = src

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
norecursedirs = archived scripts

# Output and reporting
addopts =
    --verbose
    --tb=short
    --strict-config
    --strict-markers
    --durations=10
    --maxfail=10
    -p no:warnings
    -m "not integration and not real_api and not uses_mock_broker"

# Coverage configuration (when using --cov)
# Run with: pytest --cov=src --cov-report=term-missing --cov-report=json:coverage.json --cov-report=html:htmlcov
# Current baseline: 23.50% (as of 2025-10-19)
# Short-term goal: 40%
# Long-term goal: 80%

# Minimum version
minversion = 7.0

markers =
    # Test type markers
    unit: Unit tests (isolated component tests)
    integration: Integration-level tests (skipped by default)
    property: Property-based tests using hypothesis
    behavioral: Behavioral contract tests
    e2e: End-to-end system tests

    # Component markers
    api: API-related tests
    endpoints: Coinbase API endpoint tests (paths/params/modes/errors)
    cli: Command-line interface tests
    monitoring: Monitoring and alerting tests
    risk: Risk management tests
    execution: Trade execution tests
    backtesting: Backtesting engine tests
    orchestration: System orchestration tests
    persistence: Data persistence tests
    security: Security validation tests
    utilities: Utility function tests

    # Trading-specific markers
    perps: Perpetual futures trading tests
    spot: Spot trading tests
    portfolio: Portfolio management tests
    strategy: Trading strategy tests
    liquidity: Liquidity and market impact tests

    # Performance and reliability markers
    perf: Performance benchmarks (opt-in)
    performance: Performance benchmarks (alias to perf)
    slow: High-duration tests gated from default dev runs
    load: Load testing scenarios
    stress: Stress testing scenarios

    # Environment and infrastructure markers
    real_api: Tests that hit real Coinbase APIs (opt-in)
    uses_mock_broker: Tests that depend on the deterministic broker (legacy MockBroker path; skipped by default)
    requires_db: Tests requiring database connectivity
    requires_network: Tests requiring network connectivity
    requires_secrets: Tests requiring access to secrets/vault

    # Async markers
    asyncio: Async tests (mapped to anyio via anyio plugin)
    anyio: Async tests using anyio

    # Special test categories
    regression: Regression tests for known issues
    flaky: Known flaky tests that may need retries
    manual: Tests requiring manual intervention/verification
    deprecated: Tests for deprecated functionality
