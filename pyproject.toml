[project]
name = "gpt-trader"
version = "0.1.0"
description = "Equities-first trading bot scaffold with adapter-based data, backtesting, and paper trading hooks."
readme = "README.md"
authors = [{name = "RJ + GPT-5"}]
requires-python = ">=3.12,<3.13"
dependencies = [
    "coinbase-advanced-py>=1.0.0,<2.0.0",
    "pandas>=2.2.2,<3.0.0",
    "numpy>=1.26.4,<2.0.0",
    "pydantic>=2.7.4,<3.0.0",
    "python-dotenv>=1.0.1,<2.0.0",
    "requests>=2.32.3,<3.0.0",
    "websockets>=14.0,<15.0",
    "tqdm>=4.67.1,<5.0.0",
    "scipy>=1.14.0,<2.0.0",
    "rich>=13.7.0,<14.0.0",
    "pytz>=2024.1,<2025.0",
    "pyyaml>=6.0.1,<7.0.0",
    "psutil>=6.0.0,<7.0.0",
    "aiohttp>=3.12.15,<4.0.0",
    "ta-lib>=0.6.5,<0.7.0",
    "typer>=0.16.0,<0.17.0",
    "click-completion>=0.5.2,<0.6.0",
    "toml>=0.10.2,<0.11.0",
    "schedule>=1.2.2,<2.0.0",
    "redis[hiredis]>=5.1.0,<6.0.0",
    "cryptography>=43.0.0,<44.0.0",
    "pyotp>=2.9.0,<3.0.0",
    "pyzmq>=26.0.0,<27.0.0",
    "networkx>=3.5,<4.0",
    "semver>=3.0.4,<4.0.0",
]

[project.optional-dependencies]
torch = [
    "torch>=2.0.0,<3.0.0",
    "tensorboard>=2.14.0,<3.0.0",
]
tensorflow = [
    "tensorflow>=2.13.0,<3.0.0",
    "tensorboard>=2.14.0,<3.0.0",
]
deep-learning = [
    "torch>=2.0.0,<3.0.0",
    "tensorflow>=2.13.0,<3.0.0",
    "tensorboard>=2.14.0,<3.0.0",
]
market-data = ["yfinance>=0.2.40,<0.3.0"]
api = [
    "fastapi>=0.115.4,<0.116.0",
    "uvicorn>=0.32.0,<0.33.0",
    "python-multipart>=0.0.12,<0.1.0",
    "python-jose>=3.3.0,<4.0.0",
    "passlib>=1.7.4,<2.0.0",
    "bcrypt>=4.0.1,<5.0.0",
    "flask>=3.0.0,<4.0.0",
    "flask-cors>=5.0.0,<6.0.0",
    "websocket-client>=1.8.0,<2.0.0",
]
ml = [
    "scikit-learn>=1.7.1,<2.0.0",
    "xgboost>=3.0.4,<4.0.0",
    "lightgbm>=4.0.0,<5.0.0",
    "hmmlearn>=0.3.3,<0.4.0",
    "optuna>=4.4.0,<5.0.0",
    "ray>=2.48.0,<3.0.0",
    "numba>=0.61.2,<0.62.0",
]
research = [
    "matplotlib>=3.9.0,<4.0.0",
    "seaborn>=0.13.0,<0.14.0",
    "plotly>=6.2.0,<7.0.0",
]
optimization = ["cvxpy>=1.7.1,<2.0.0"]
ui = ["streamlit>=1.48.0,<2.0.0"]
equities = ["alpaca-py>=0.20.0,<0.21.0"]

[project.scripts]
gpt-trader = "bot_v2.cli:main"
perps-bot = "bot_v2.cli:main"

[tool.poetry]
packages = [{ include = "bot_v2", from = "src" }]

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.6"
black = "^24.4.2"
mypy = "^1.10.0"
pre-commit = "^3.7.1"
yfinance = "^0.2.40"
types-requests = "^2.32.0.20240712"
pandas-stubs = "^2.2.2.240603"
types-pyyaml = "^6.0.12"
pytest = "^8.2.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-xdist = "^3.0.0"
pytest-benchmark = "^4.0.0"
faker = "^18.0.0"
freezegun = "^1.2.0"
hypothesis = "^6.70.0"
responses = "^0.23.0"
coverage = "^7.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
line-length = 100
target-version = "py312"
extend-exclude = [
    "data",
    "scripts/pickle_scanner.py",
    "scripts/pickle_to_joblib.py",
    "archived",
    "demos",
    "scripts",
    "tests",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "UP",
    "B",
    "ANN",
    "S",
    "W",
]
ignore = [
    "ANN101",
    "ANN102",
    "S101",
    "E501",
    "ANN401",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["ANN"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
ignore_missing_imports = true
explicit_package_bases = true
mypy_path = "src"

# Pytest configuration moved to pytest.ini for better organization
