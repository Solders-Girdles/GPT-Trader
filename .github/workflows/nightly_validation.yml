name: Nightly Validation

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  quick-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.12-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run core validation harness
        run: |
          poetry run python scripts/validation/verify_core.py --check all

      - name: Run Coinbase websocket regression test
        run: |
          poetry run pytest tests/unit/bot_v2/features/brokerages/coinbase/test_coinbase_websocket.py -k SequenceGuard -v

      - name: Quick WebSocket smoke
        run: |
          poetry run python - <<'PY'
          from src.bot_v2.features.brokerages.coinbase.ws import CoinbaseWebSocket, SequenceGuard
          import sys
          import types

          mock_ws = types.ModuleType('websocket')
          mock_ws.create_connection = lambda url: None
          sys.modules['websocket'] = mock_ws

          ws = CoinbaseWebSocket('wss://test')
          ws.connect()
          assert ws._transport is not None

          guard = SequenceGuard()
          first = guard.annotate({'sequence': 1})
          assert 'gap_detected' not in first
          second = guard.annotate({'sequence': 3})
          assert second.get('gap_detected') is True
          PY

      - name: Report status
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Nightly validation failed - Coinbase routing regression',
              body: 'The nightly validation detected a regression in Coinbase endpoint routing. Check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.',
              labels: ['bug', 'coinbase', 'critical']
            })
