name: Perpetuals Trading Tests

on:
  push:
    paths:
      - 'src/bot_v2/features/live_trade/**'
      - 'src/bot_v2/features/brokerages/**'
      - 'scripts/run_perps_bot.py'
      - 'scripts/validation/**'
      - 'tests/**/live_trade/**'
      - 'tests/**/perps/**'
      - '.github/workflows/perps_tests.yml'
  pull_request:
    paths:
      - 'src/bot_v2/features/live_trade/**'
      - 'src/bot_v2/features/brokerages/**'
      - 'scripts/run_perps_bot.py'
      - 'scripts/validation/**'
      - 'tests/**/live_trade/**'
      - 'tests/**/perps/**'
      - '.github/workflows/perps_tests.yml'

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.12-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run live trade unit tests
        env:
          EVENT_STORE_ROOT: ${{ runner.temp }}/event_store_unit
        run: |
          mkdir -p "$EVENT_STORE_ROOT"
          poetry run pytest tests/unit/bot_v2/features/live_trade -q --tb=short

      - name: Run orchestration perps tests
        env:
          EVENT_STORE_ROOT: ${{ runner.temp }}/event_store_orchestration
        run: |
          mkdir -p "$EVENT_STORE_ROOT"
          poetry run pytest \
            tests/unit/bot_v2/orchestration/test_live_execution_perps.py \
            tests/unit/bot_v2/features/live_trade/test_type_consolidation.py \
            -q --tb=short

      - name: Run perps validation harness
        env:
          EVENT_STORE_ROOT: ${{ runner.temp }}/event_store_validation
        run: |
          mkdir -p "$EVENT_STORE_ROOT"
          poetry run python scripts/validation/validate_perps_e2e.py

      - name: Run paper-mode smoke
        env:
          EVENT_STORE_ROOT: ${{ runner.temp }}/event_store_paper
        run: |
          mkdir -p "$EVENT_STORE_ROOT"
          poetry run python scripts/validation/paper_mode_e2e.py

      - name: CLI help check
        run: |
          poetry run python -m bot_v2.cli --help

      - name: Smoke test dev profile (single cycle)
        env:
          EVENT_STORE_ROOT: ${{ runner.temp }}/event_store_dev
        run: |
          mkdir -p "$EVENT_STORE_ROOT"
          poetry run python scripts/run_perps_bot.py --profile dev --dry-run --dev-fast --symbols BTC-PERP
          test -f "$EVENT_STORE_ROOT/perps_bot/dev/health.json"
          test -f "$EVENT_STORE_ROOT/perps_bot/dev/last_state.json"

      - name: Smoke test demo profile (mocked)
        env:
          EVENT_STORE_ROOT: ${{ runner.temp }}/event_store_demo
          COINBASE_SANDBOX: '1'
          PERPS_FORCE_MOCK: '1'
        run: |
          mkdir -p "$EVENT_STORE_ROOT"
          poetry run python scripts/run_perps_bot.py --profile demo --dev-fast --reduce-only --symbols BTC-PERP
          test -f "$EVENT_STORE_ROOT/perps_bot/demo/health.json"
          test -f "$EVENT_STORE_ROOT/perps_bot/demo/last_state.json"
