name: Coinbase Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/bot_v2/features/brokerages/coinbase/**'
      - 'tests/unit/bot_v2/features/brokerages/coinbase/**'
      - '.github/workflows/coinbase_tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/bot_v2/features/brokerages/coinbase/**'
      - 'tests/unit/bot_v2/features/brokerages/coinbase/**'

jobs:
  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        api-mode: [advanced, exchange]
        include:
          - api-mode: advanced
            base-url: https://api.coinbase.com
            needs-passphrase: false
          - api-mode: exchange
            base-url: https://api-public.sandbox.exchange.coinbase.com
            needs-passphrase: true
    
    name: Test Python ${{ matrix.python-version }} - ${{ matrix.api-mode }} mode
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
    
    - name: Set environment for API mode
      env:
        COINBASE_API_MODE: ${{ matrix.api-mode }}
        COINBASE_API_BASE: ${{ matrix.base-url }}
        COINBASE_API_KEY: test-key
        COINBASE_API_SECRET: test-secret
        COINBASE_API_PASSPHRASE: ${{ matrix.needs-passphrase && 'test-pass' || '' }}
      run: |
        echo "Testing in ${{ matrix.api-mode }} mode"
        echo "COINBASE_API_MODE=${{ matrix.api-mode }}" >> $GITHUB_ENV
    
    - name: Run Coinbase unit tests
      run: |
        pytest tests/unit/bot_v2/features/brokerages/coinbase/ -v \
          --cov=src/bot_v2/features/brokerages/coinbase \
          --cov-report=term-missing
    
    - name: Run validation script
      run: |
        python scripts/validate_critical_fixes_v2.py
    
    - name: Verify endpoint routing
      run: |
        python scripts/verify_final_fixes.py
    
    - name: Upload coverage reports
      if: matrix.python-version == '3.10' && matrix.api-mode == 'advanced'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: coinbase
        name: coinbase-coverage

  integration-smoke:
    runs-on: ubuntu-latest
    name: Integration Smoke Test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run adapter integration test
      run: |
        pytest tests/unit/bot_v2/features/brokerages/coinbase/test_adapter_integration.py -v
    
    - name: Test WebSocket transport initialization
      run: |
        python -c "
        from src.bot_v2.features.brokerages.coinbase.ws import CoinbaseWebSocket
        import sys, types
        mock_ws = types.ModuleType('websocket')
        sys.modules['websocket'] = mock_ws
        ws = CoinbaseWebSocket('wss://test')
        ws.connect()
        assert ws._transport is not None
        print('âœ… WebSocket transport initialization confirmed')
        "