apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-engine
  namespace: gpt-trader
spec:
  replicas: 2
  selector:
    matchLabels:
      app: trading-engine
  template:
    metadata:
      labels:
        app: trading-engine
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - name: trading-engine
          image: gpt-trader/trading-engine:latest
          imagePullPolicy: Always
          env:
            - name: ALPACA_API_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: ALPACA_API_KEY_ID
            - name: ALPACA_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: ALPACA_API_SECRET
            - name: POLYGON_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: POLYGON_API_KEY
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@redis:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: REDIS_PASSWORD
            - name: DATABASE_URL
              value: "postgresql://gpt_trader:$(POSTGRES_PASSWORD)@postgresql:5432/gpt_trader"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: POSTGRES_PASSWORD
            - name: MODE
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
          resources:
            requests:
              memory: "2Gi"
              cpu: "1000m"
            limits:
              memory: "8Gi"
              cpu: "4000m"
          volumeMounts:
            - name: config
              mountPath: /app/config
            - name: models
              mountPath: /app/models
      volumes:
        - name: config
          configMap:
            name: gpt-trader-config
        - name: models
          persistentVolumeClaim:
            claimName: ml-models-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-models-pvc
  namespace: gpt-trader
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: efs-sc  # For AWS EFS, adjust for your cloud provider

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: trading-engine-hpa
  namespace: gpt-trader
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: trading-engine
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 300
