name: Scenario Test Suite

on:
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * *'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  scenarios:
    name: Scenario Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run scenario suite
        env:
          PYTEST_ADDOPTS: '-m "integration and scenario" -v'
        run: |
          poetry run pytest tests/integration/scenarios \
            --cov=bot_v2.orchestration \
            --cov=bot_v2.features.brokerages \
            --cov-report=xml \
            --cov-report=term-missing

      - name: Upload coverage artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: scenario-coverage
          path: coverage.xml
