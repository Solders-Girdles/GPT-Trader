apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: gpt-trader
spec:
  selector:
    app: postgresql
  ports:
    - port: 5432
      targetPort: 5432
  clusterIP: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: gpt-trader
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: gpt_trader
            - name: POSTGRES_USER
              value: gpt_trader
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gpt-trader-secrets
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-config
              mountPath: /docker-entrypoint-initdb.d
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - gpt_trader
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - gpt_trader
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: postgres-config
          configMap:
            name: postgres-init
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: gpt-trader
data:
  init.sql: |
    -- Create tables for GPT-Trader

    -- Strategies table
    CREATE TABLE IF NOT EXISTS strategies (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        name VARCHAR(255) NOT NULL,
        config JSONB NOT NULL,
        status VARCHAR(50) DEFAULT 'idle',
        created_by VARCHAR(255),
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW()
    );

    -- Orders table
    CREATE TABLE IF NOT EXISTS orders (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        strategy_id UUID REFERENCES strategies(id),
        symbol VARCHAR(10) NOT NULL,
        side VARCHAR(10) NOT NULL,
        quantity DECIMAL(20, 8) NOT NULL,
        order_type VARCHAR(20) NOT NULL,
        status VARCHAR(50) DEFAULT 'pending',
        filled_price DECIMAL(20, 8),
        filled_at TIMESTAMP,
        created_at TIMESTAMP DEFAULT NOW()
    );

    -- Positions table
    CREATE TABLE IF NOT EXISTS positions (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        strategy_id UUID REFERENCES strategies(id),
        symbol VARCHAR(10) NOT NULL,
        quantity DECIMAL(20, 8) NOT NULL,
        entry_price DECIMAL(20, 8) NOT NULL,
        current_price DECIMAL(20, 8),
        unrealized_pnl DECIMAL(20, 8),
        realized_pnl DECIMAL(20, 8) DEFAULT 0,
        opened_at TIMESTAMP DEFAULT NOW(),
        closed_at TIMESTAMP
    );

    -- Performance metrics table
    CREATE TABLE IF NOT EXISTS performance_metrics (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        strategy_id UUID REFERENCES strategies(id),
        timestamp TIMESTAMP DEFAULT NOW(),
        portfolio_value DECIMAL(20, 8),
        daily_pnl DECIMAL(20, 8),
        sharpe_ratio DECIMAL(10, 4),
        max_drawdown DECIMAL(10, 4),
        win_rate DECIMAL(10, 4),
        metrics JSONB
    );

    -- Alerts table
    CREATE TABLE IF NOT EXISTS alerts (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        severity VARCHAR(20) NOT NULL,
        category VARCHAR(50) NOT NULL,
        message TEXT NOT NULL,
        metadata JSONB,
        acknowledged BOOLEAN DEFAULT FALSE,
        created_at TIMESTAMP DEFAULT NOW()
    );

    -- Create indexes
    CREATE INDEX idx_orders_strategy ON orders(strategy_id);
    CREATE INDEX idx_orders_created ON orders(created_at);
    CREATE INDEX idx_positions_strategy ON positions(strategy_id);
    CREATE INDEX idx_positions_symbol ON positions(symbol);
    CREATE INDEX idx_metrics_strategy ON performance_metrics(strategy_id);
    CREATE INDEX idx_metrics_timestamp ON performance_metrics(timestamp);
    CREATE INDEX idx_alerts_severity ON alerts(severity);
    CREATE INDEX idx_alerts_created ON alerts(created_at);
