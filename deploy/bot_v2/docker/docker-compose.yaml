version: "3.8"

services:
  trading-bot:
    build:
      context: ../../../..
      dockerfile: deploy/bot_v2/docker/Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: bot_v2_main
    hostname: trading-bot
    env_file:
      - .env
    environment:
      ENV: ${ENV:-development}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ../../..:/app:cached  # Mount source code for development
      - bot_logs:/app/logs
      - bot_data:/app/data
      - bot_cache:/app/cache
    ports:
      - "8080:8080"   # Web interface
      - "8443:8443"   # Secure API
      - "9090:9090"   # Metrics endpoint
    networks:
      - trading-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    container_name: bot_v2_prometheus
    hostname: prometheus
    profiles:
      - observability
    volumes:
      - ../../../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - "9091:9090"
    networks:
      - trading-network
    restart: unless-stopped
    depends_on:
      - trading-bot

  grafana:
    image: grafana/grafana:latest
    container_name: bot_v2_grafana
    hostname: grafana
    env_file:
      - .env
    profiles:
      - observability
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:?Set GF_SECURITY_ADMIN_PASSWORD in deploy/bot_v2/docker/.env}
      GF_INSTALL_PLUGINS: redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3000:3000"
    networks:
      - trading-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  trading-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  bot_logs:
    driver: local
  bot_data:
    driver: local
  bot_cache:
    driver: local
